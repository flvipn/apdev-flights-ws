<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:validation="http://www.mulesoft.org/schema/mule/validation" xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns:wsc="http://www.mulesoft.org/schema/mule/wsc"
	xmlns:american-flights-api="http://www.mulesoft.org/schema/mule/american-flights-api" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/american-flights-api http://www.mulesoft.org/schema/mule/american-flights-api/current/mule-american-flights-api.xsd
http://www.mulesoft.org/schema/mule/wsc http://www.mulesoft.org/schema/mule/wsc/current/mule-wsc.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/validation http://www.mulesoft.org/schema/mule/validation/current/mule-validation.xsd">
	<flow name="getFlights" doc:id="b9c06ee2-85d5-4714-b786-a13316cc8ff5" >
		<set-variable value="#[message.attributes.queryParams.airline]" doc:name="airline" doc:id="ad17cea1-2a09-4949-b63b-294b9e59efc5" variableName="airline"/>
		<flow-ref doc:name="setCode" doc:id="3c7d53a9-5dfc-4765-8c43-6f1be512713b" name="setCode"/>
		<validation:is-true doc:name="Is valid" doc:id="92b76fbc-4a24-49f0-93b7-9c61fc5da583" expression="#[['SFO','LAX','CLE','PDX','PDF'] contains vars.code]" message="#['Invalid destination' ++ ' ' ++ (vars.code default ' ')]">
			<error-mapping sourceType="VALIDATION:INVALID_BOOLEAN" targetType="APP:INVALID_DESTINATION" />
		</validation:is-true>
		<choice doc:name="Choice" doc:id="027c9623-e344-4879-8819-931b272fdcd3" >
			<when expression='vars.airline=="american"'>
				<flow-ref doc:name="getAmericanFlights" doc:id="76cca7bf-ed93-4041-a0f3-6fc3174c2eeb" name="getAmericanFlights"/>
			</when>
			<when expression='vars.airline=="united"'>
				<flow-ref doc:name="getUnitedFlights" doc:id="01ca0aef-d6e6-4c67-87bf-a4072bafe15e" name="getUnitedFlights"/>
			</when>
			<when expression='vars.airline=="delta"'>
				<flow-ref doc:name="getDeltaFlights" doc:id="9b0d4eb8-d1e2-44f7-8591-2dac9d0ef2fc" name="getDeltaFlights"/>
			</when>
			<otherwise >
				<flow-ref doc:name="getAllAirlineFlights" doc:id="2790b4b4-2ab4-4bad-896f-8c6c88d3ef1f" name="getAllAirlineFlights"/>
			</otherwise>
		</choice>
		<ee:transform doc:name="[Flight] to JSON" doc:id="5d680d42-6cdc-4768-b035-bb1ad0d6c20f" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="2d1614e3-aeb2-4802-9acd-788ab8dd6139" />
	</flow>
	<flow name="getAllAirlineFlights" doc:id="6854a86f-94c9-41fa-bbf7-dd5a6bc9e888" >
		<scatter-gather doc:name="Scatter-Gather" doc:id="8e323e2b-6d85-4c26-b395-47fa8b9284e7" >
			<route >
				<try doc:name="Try" doc:id="44383bab-6bbb-4658-93ee-9ae261176963" >
					<flow-ref doc:name="getAmericanFlights" doc:id="beeab3a2-d844-4681-bb62-ff11689794c4" name="getAmericanFlights" />
					<error-handler >
						<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="c20eef4d-f951-4353-8f49-e493d1f22955" type="ANY">
							<ee:transform doc:name="[]" doc:id="193b3741-8339-4473-9c5f-2be2bf8ae648" >
								<ee:message >
									<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
[]]]></ee:set-payload>
								</ee:message>
							</ee:transform>
						</on-error-continue>
					</error-handler>
				</try>
			</route>
			<route >
				<try doc:name="Try" doc:id="5b7a5175-71fb-4a1c-9624-5799c66734ce" >
					<flow-ref doc:name="getUnitedFlights" doc:id="d4e730e5-1829-43f9-9d94-67edd42f9646" name="getUnitedFlights" />
					<error-handler >
						<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="4168e4a1-5bfa-4f6e-8a50-2a9f29afefb7" type="ANY">
							<ee:transform doc:name="[]" doc:id="3c6ca8d6-ed72-4308-8d82-863ccf985777" >
								<ee:message >
									<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
[]]]></ee:set-payload>
								</ee:message>
							</ee:transform>
						</on-error-continue>
					</error-handler>
				</try>
			</route>
			<route >
				<try doc:name="Try" doc:id="03e8cdbb-f10b-43c9-a26c-44ebf22eb9c2" >
					<flow-ref doc:name="getDeltaFlights" doc:id="45dcfabd-3acc-4104-83b8-fca0bad53f85" name="getDeltaFlights" />
					<error-handler >
						<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="cb1333ba-ae54-46af-a42c-ecc13be6358a" type="ANY">
							<ee:transform doc:name="[]" doc:id="a5446479-6a55-4b92-928d-8f7f6591cd89" >
								<ee:message >
									<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
[]]]></ee:set-payload>
								</ee:message>
							</ee:transform>
						</on-error-continue>
					</error-handler>
				</try>
			</route>
		</scatter-gather>
		<ee:transform doc:name="flatten to [Flight]" doc:id="49499cdf-5b6b-46c3-9007-2f08b93da795" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
flatten(payload..payload)]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="6a15faaf-7ac2-4da2-9389-6606c7973ea1" />
	</flow>
	<sub-flow name="setCode" doc:id="08b320af-e861-49bc-9a13-b92cb3f159d8" >
		<set-variable value="#[message.attributes.queryParams.code]" doc:name="code" doc:id="7b97fb55-b916-478f-bdb8-c81fe1be6bbe" variableName="code"/>
	</sub-flow>
	<flow name="getAmericanFlights" doc:id="9c0148ea-088a-46cf-ad2b-2ae1e5556245" >
		<american-flights-api:get-flights doc:name="Get flights" doc:id="4666df5a-1250-4da0-80a8-191810654889" config-ref="American_Flights_API_Config" client-id="${american.client_id}" client-secret="${american.client_secret}" destination="#[vars.code]"/>
		<ee:transform doc:name="JSON to [Flight]" doc:id="4176c754-c18f-43a8-baca-df3a5e26ba75" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
payload map ( payload01 , indexOfPayload01 ) -> {
	airlineName: "American",
	availableSeats: payload01.emptySeats,
	departureDate: payload01.departureDate,
	destination: payload01.destination,
	flightCode: payload01.code,
	origination: payload01.origin,
	planeType: payload01.plane."type",
	price: payload01.price
} as Object {
	class : "com.mulesoft.training.Flight"
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="fef3f38f-239f-4763-88ab-c8a2e231f6ac" />
		<error-handler >
			<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="2b0e2f54-4df6-413b-bff5-869d984dc6f8" type="AMERICAN-FLIGHTS-API:BAD_REQUEST">
				<ee:transform doc:name="No flights" doc:id="7868f061-64b5-42e5-aabc-e43d9f15cf6a">
					<ee:message>
						<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
	"message": "No flights to " ++ vars.code as String
}]]></ee:set-payload>
					</ee:message>
				</ee:transform>
				<set-variable value="200" doc:name="httpStatus" doc:id="9d3e6d77-e2fb-4a54-b767-e318b269c482" variableName="httpStatus" />
			</on-error-continue>
		</error-handler>
	</flow>
	<flow name="getUnitedFlights" doc:id="8339ee4d-78fc-41af-a52a-e17a7a263174" >
		<http:request method="GET" doc:name="Get flights" doc:id="7ca5f779-294e-49dd-94b4-70832b8fafbe" config-ref="HTTP_Request_config_training" path="/united/flights/{dest}">
			<http:uri-params ><![CDATA[#[output application/java
---
{
	dest : vars.code
}]]]></http:uri-params>
		</http:request>
		<ee:transform doc:name="JSON to [Flight]" doc:id="4b8c996e-57fa-40b4-998e-3ae3991da620" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
payload.flights map ( flight , indexOfFlight ) -> {
	airlineName: flight.airlineName,
	availableSeats: flight.emptySeats,
	departureDate: flight.departureDate,
	destination: flight.destination,
	flightCode: flight.code,
	origination: flight.origin,
	planeType: flight.planeType,
	price: flight.price
} as Object {
	class : "com.mulesoft.training.Flight"
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="ddc86d28-4c94-4cd7-994d-b9c6045d002c" />
	</flow>
	<flow name="getDeltaFlights" doc:id="d1698466-4ac3-46bd-b56a-58fdfdb82835" >
		<ee:transform doc:name="Pass Code" doc:id="e5b57b8e-5650-4c6e-89bf-42ad1091073b" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/xml
ns ns0 http://soap.training.mulesoft.com/
---
{
	ns0#findFlight: {
		destination: vars.code
	}
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<wsc:consume operation="findFlight" doc:name="Get flights" doc:id="e2eca0a6-7eec-4db1-a343-439ead4da9a6" config-ref="Delta_Web_Service_Consumer_Config"/>
		<ee:transform doc:name="SOAP to [Flight]" doc:id="b8145ffa-438a-4572-af92-2c7a34adc091" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/java
ns ns0 http://soap.training.mulesoft.com/
---
payload.body.ns0#findFlightResponse.*return map ( return , indexOfReturn ) -> {
	airlineName: return.airlineName,
	availableSeats: return.emptySeats,
	departureDate: return.departureDate,
	destination: return.destination,
	flightCode: return.code,
	origination: return.origin,
	planeType: return.planeType,
	price: return.price
} as Object {
	class : "com.mulesoft.training.Flight"
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="fdaa7455-484a-450a-a723-c17bd1ae1764" />
	</flow>
	<flow name="postFlight" doc:id="290117a3-2388-4135-8e82-336872cfcedd" >
		<ee:transform doc:name="Transform Message" doc:id="3ce50339-c86c-4722-b4b1-c371e0d33194" >
			<ee:message >
				<ee:set-payload resource="json_flight_playground.dwl" />
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="DWoutput" ><![CDATA[%dw 2.0
output application/xml
---
data: {
	hub: "MUA",
	flight @(airline: payload.airline): {
		code: payload.toAirportCode,
	}
}]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="ff790fd3-126d-47e8-9786-632ad4281244" message="#[vars.DWoutput]"/>
	</flow>
	<flow name="postMultipleFlights" doc:id="811b38b8-df06-47d8-97c3-99b7ad81a515" >
		<http:listener doc:name="POST /multipleflights" doc:id="9c99e123-1b2e-423e-b5fd-04aa745f2e95" config-ref="HTTP_Listener_config" path="/multipleflights"/>
		<ee:transform doc:name="Transform Message" doc:id="78e3cb86-a688-4e11-89b9-5934b6500072" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/java

import dasherize from dw::core::Strings
type Flight = Object {class: "com.mulesoft.training.Flight"}
type Currency = String {format : "###.00"}
//var numSeats = (x=400) -> x
/**var numSeats = (planeType: String) ->
	if (planeType contains('737'))
		150
	else
		300
*/

fun getNumSeats(planeType: String) = do {
	var maxSeats =
	if (planeType contains('737'))
		150
	else
		300
	---
	maxSeats
}
---
flights: (payload..*return map (object,index) -> {
			destination: object.destination,
			price: object.price as Number as Currency,
			//totalSeats: getNumSeats(object.planeType as String),
			planeType: dasherize(replace(object.planeType,/(Boing)/) with
"Boeing"),
			departureDate: object.departureDate as Date {format: "yyyy/MM/dd"} 
			as String  {format: "MMM dd, yyyy"},
			availableSeats: object.emptySeats as Number,
} as Flight) distinctBy $ filter ($.availableSeats !=0) orderBy $.departureDate orderBy $.price 
]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="ddb01c1f-20af-4534-bf70-939c224edd52" />
	</flow>
</mule>
